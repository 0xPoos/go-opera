// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/Fantom-foundation/go-lachesis/src/proxy/wire (interfaces: CtrlServer)

package main

import (
	"context"

	"github.com/golang/mock/gomock"
	"github.com/golang/protobuf/ptypes/empty"

	"github.com/Fantom-foundation/go-lachesis/src/proxy/wire"
)

// Mock of CtrlServer interface
type MockCtrlServer struct {
	ctrl     *gomock.Controller
	recorder *_MockCtrlServerRecorder
}

// Recorder for MockCtrlServer (not exported)
type _MockCtrlServerRecorder struct {
	mock *MockCtrlServer
}

func NewMockCtrlServer(ctrl *gomock.Controller) *MockCtrlServer {
	mock := &MockCtrlServer{ctrl: ctrl}
	mock.recorder = &_MockCtrlServerRecorder{mock}
	return mock
}

func (_m *MockCtrlServer) EXPECT() *_MockCtrlServerRecorder {
	return _m.recorder
}

func (_m *MockCtrlServer) ID(_param0 context.Context, _param1 *empty.Empty) (*wire.IDResponse, error) {
	ret := _m.ctrl.Call(_m, "ID", _param0, _param1)
	ret0, _ := ret[0].(*wire.IDResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockCtrlServerRecorder) ID(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ID", arg0, arg1)
}

func (_m *MockCtrlServer) InternalTxn(_param0 context.Context, _param1 *wire.InternalTxnRequest) (*empty.Empty, error) {
	ret := _m.ctrl.Call(_m, "InternalTxn", _param0, _param1)
	ret0, _ := ret[0].(*empty.Empty)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockCtrlServerRecorder) InternalTxn(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "InternalTxn", arg0, arg1)
}

func (_m *MockCtrlServer) Stake(_param0 context.Context, _param1 *empty.Empty) (*wire.StakeResponse, error) {
	ret := _m.ctrl.Call(_m, "Stake", _param0, _param1)
	ret0, _ := ret[0].(*wire.StakeResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockCtrlServerRecorder) Stake(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Stake", arg0, arg1)
}
