// Code generated by protoc-gen-go. DO NOT EDIT.
// source: stored.proto

package api

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PeersID struct {
	IDs                  []string `protobuf:"bytes,1,rep,name=IDs,proto3" json:"IDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeersID) Reset()         { *m = PeersID{} }
func (m *PeersID) String() string { return proto.CompactTextString(m) }
func (*PeersID) ProtoMessage()    {}
func (*PeersID) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5219adf996163c1, []int{0}
}

func (m *PeersID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeersID.Unmarshal(m, b)
}
func (m *PeersID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeersID.Marshal(b, m, deterministic)
}
func (m *PeersID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeersID.Merge(m, src)
}
func (m *PeersID) XXX_Size() int {
	return xxx_messageInfo_PeersID.Size(m)
}
func (m *PeersID) XXX_DiscardUnknown() {
	xxx_messageInfo_PeersID.DiscardUnknown(m)
}

var xxx_messageInfo_PeersID proto.InternalMessageInfo

func (m *PeersID) GetIDs() []string {
	if m != nil {
		return m.IDs
	}
	return nil
}

func init() {
	proto.RegisterType((*PeersID)(nil), "api.PeersID")
}

func init() { proto.RegisterFile("stored.proto", fileDescriptor_c5219adf996163c1) }

var fileDescriptor_c5219adf996163c1 = []byte{
	// 75 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x2e, 0xc9, 0x2f,
	0x4a, 0x4d, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0x2c, 0xc8, 0x54, 0x92, 0xe6,
	0x62, 0x0f, 0x48, 0x4d, 0x2d, 0x2a, 0xf6, 0x74, 0x11, 0x12, 0xe0, 0x62, 0xf6, 0x74, 0x29, 0x96,
	0x60, 0x54, 0x60, 0xd6, 0xe0, 0x0c, 0x02, 0x31, 0x93, 0xd8, 0xc0, 0x0a, 0x8d, 0x01, 0x01, 0x00,
	0x00, 0xff, 0xff, 0xc9, 0x6e, 0x2a, 0x9d, 0x38, 0x00, 0x00, 0x00,
}
