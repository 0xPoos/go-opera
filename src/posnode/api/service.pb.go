// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package api

import (
	context "context"
	fmt "fmt"
	wire "github.com/Fantom-foundation/go-lachesis/src/inter/wire"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type KnownEvents struct {
	Lasts                map[string]uint64 `protobuf:"bytes,1,rep,name=Lasts,proto3" json:"Lasts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *KnownEvents) Reset()         { *m = KnownEvents{} }
func (m *KnownEvents) String() string { return proto.CompactTextString(m) }
func (*KnownEvents) ProtoMessage()    {}
func (*KnownEvents) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *KnownEvents) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KnownEvents.Unmarshal(m, b)
}
func (m *KnownEvents) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KnownEvents.Marshal(b, m, deterministic)
}
func (m *KnownEvents) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KnownEvents.Merge(m, src)
}
func (m *KnownEvents) XXX_Size() int {
	return xxx_messageInfo_KnownEvents.Size(m)
}
func (m *KnownEvents) XXX_DiscardUnknown() {
	xxx_messageInfo_KnownEvents.DiscardUnknown(m)
}

var xxx_messageInfo_KnownEvents proto.InternalMessageInfo

func (m *KnownEvents) GetLasts() map[string]uint64 {
	if m != nil {
		return m.Lasts
	}
	return nil
}

type EventRequest struct {
	PeerID               string   `protobuf:"bytes,1,opt,name=PeerID,proto3" json:"PeerID,omitempty"`
	Index                uint64   `protobuf:"varint,2,opt,name=Index,proto3" json:"Index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventRequest) Reset()         { *m = EventRequest{} }
func (m *EventRequest) String() string { return proto.CompactTextString(m) }
func (*EventRequest) ProtoMessage()    {}
func (*EventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *EventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventRequest.Unmarshal(m, b)
}
func (m *EventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventRequest.Marshal(b, m, deterministic)
}
func (m *EventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventRequest.Merge(m, src)
}
func (m *EventRequest) XXX_Size() int {
	return xxx_messageInfo_EventRequest.Size(m)
}
func (m *EventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EventRequest proto.InternalMessageInfo

func (m *EventRequest) GetPeerID() string {
	if m != nil {
		return m.PeerID
	}
	return ""
}

func (m *EventRequest) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

type PeerRequest struct {
	PeerID               string   `protobuf:"bytes,1,opt,name=PeerID,proto3" json:"PeerID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeerRequest) Reset()         { *m = PeerRequest{} }
func (m *PeerRequest) String() string { return proto.CompactTextString(m) }
func (*PeerRequest) ProtoMessage()    {}
func (*PeerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{2}
}

func (m *PeerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerRequest.Unmarshal(m, b)
}
func (m *PeerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerRequest.Marshal(b, m, deterministic)
}
func (m *PeerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerRequest.Merge(m, src)
}
func (m *PeerRequest) XXX_Size() int {
	return xxx_messageInfo_PeerRequest.Size(m)
}
func (m *PeerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PeerRequest proto.InternalMessageInfo

func (m *PeerRequest) GetPeerID() string {
	if m != nil {
		return m.PeerID
	}
	return ""
}

type PeerInfo struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	PubKey               []byte   `protobuf:"bytes,2,opt,name=PubKey,proto3" json:"PubKey,omitempty"`
	Host                 string   `protobuf:"bytes,3,opt,name=Host,proto3" json:"Host,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeerInfo) Reset()         { *m = PeerInfo{} }
func (m *PeerInfo) String() string { return proto.CompactTextString(m) }
func (*PeerInfo) ProtoMessage()    {}
func (*PeerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{3}
}

func (m *PeerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerInfo.Unmarshal(m, b)
}
func (m *PeerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerInfo.Marshal(b, m, deterministic)
}
func (m *PeerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerInfo.Merge(m, src)
}
func (m *PeerInfo) XXX_Size() int {
	return xxx_messageInfo_PeerInfo.Size(m)
}
func (m *PeerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PeerInfo proto.InternalMessageInfo

func (m *PeerInfo) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *PeerInfo) GetPubKey() []byte {
	if m != nil {
		return m.PubKey
	}
	return nil
}

func (m *PeerInfo) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

type DiscoveryInfo struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Host                 string   `protobuf:"bytes,2,opt,name=Host,proto3" json:"Host,omitempty"`
	LastRequest          int64    `protobuf:"varint,3,opt,name=LastRequest,proto3" json:"LastRequest,omitempty"`
	Available            bool     `protobuf:"varint,4,opt,name=Available,proto3" json:"Available,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiscoveryInfo) Reset()         { *m = DiscoveryInfo{} }
func (m *DiscoveryInfo) String() string { return proto.CompactTextString(m) }
func (*DiscoveryInfo) ProtoMessage()    {}
func (*DiscoveryInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{4}
}

func (m *DiscoveryInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscoveryInfo.Unmarshal(m, b)
}
func (m *DiscoveryInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscoveryInfo.Marshal(b, m, deterministic)
}
func (m *DiscoveryInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscoveryInfo.Merge(m, src)
}
func (m *DiscoveryInfo) XXX_Size() int {
	return xxx_messageInfo_DiscoveryInfo.Size(m)
}
func (m *DiscoveryInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscoveryInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DiscoveryInfo proto.InternalMessageInfo

func (m *DiscoveryInfo) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *DiscoveryInfo) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *DiscoveryInfo) GetLastRequest() int64 {
	if m != nil {
		return m.LastRequest
	}
	return 0
}

func (m *DiscoveryInfo) GetAvailable() bool {
	if m != nil {
		return m.Available
	}
	return false
}

func init() {
	proto.RegisterType((*KnownEvents)(nil), "api.KnownEvents")
	proto.RegisterMapType((map[string]uint64)(nil), "api.KnownEvents.LastsEntry")
	proto.RegisterType((*EventRequest)(nil), "api.EventRequest")
	proto.RegisterType((*PeerRequest)(nil), "api.PeerRequest")
	proto.RegisterType((*PeerInfo)(nil), "api.PeerInfo")
	proto.RegisterType((*DiscoveryInfo)(nil), "api.DiscoveryInfo")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 398 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0xdf, 0x8a, 0xd3, 0x40,
	0x14, 0xc6, 0x9b, 0x3f, 0xbb, 0x74, 0x4f, 0xb6, 0xb2, 0x0e, 0x22, 0x21, 0x7a, 0x11, 0x06, 0x84,
	0x5c, 0xb8, 0x89, 0xd6, 0x9b, 0x45, 0xbc, 0x11, 0xbb, 0xbb, 0x96, 0x15, 0x91, 0xf8, 0x04, 0x93,
	0xf4, 0xec, 0x76, 0x30, 0x9d, 0xa9, 0x33, 0x93, 0xd4, 0xf8, 0x28, 0x3e, 0xad, 0x64, 0x92, 0xb6,
	0x41, 0x05, 0xef, 0xce, 0xf7, 0x9d, 0xf3, 0xfd, 0x18, 0xce, 0x1c, 0x98, 0x69, 0x54, 0x0d, 0x2f,
	0x31, 0xdd, 0x2a, 0x69, 0x24, 0xf1, 0xd8, 0x96, 0x47, 0x1f, 0x1e, 0xb8, 0x59, 0xd7, 0x45, 0x5a,
	0xca, 0x4d, 0x76, 0xc3, 0x84, 0x91, 0x9b, 0xcb, 0x7b, 0x59, 0x8b, 0x15, 0x33, 0x5c, 0x8a, 0xec,
	0x41, 0x5e, 0x56, 0xac, 0x5c, 0xa3, 0xe6, 0x3a, 0xd3, 0xaa, 0xcc, 0xb8, 0x30, 0xa8, 0xb2, 0x1d,
	0x57, 0x98, 0x61, 0x83, 0xc2, 0xf4, 0x24, 0xfa, 0x13, 0x82, 0x3b, 0x21, 0x77, 0xe2, 0xba, 0xf3,
	0x34, 0x79, 0x0d, 0x27, 0x9f, 0x98, 0x36, 0x3a, 0x74, 0x62, 0x2f, 0x09, 0xe6, 0xcf, 0x52, 0xb6,
	0xe5, 0xe9, 0x68, 0x20, 0xb5, 0xdd, 0x6b, 0x61, 0x54, 0x9b, 0xf7, 0x93, 0xd1, 0x15, 0xc0, 0xd1,
	0x24, 0x17, 0xe0, 0x7d, 0xc3, 0x36, 0x74, 0x62, 0x27, 0x39, 0xcb, 0xbb, 0x92, 0x3c, 0x81, 0x93,
	0x86, 0x55, 0x35, 0x86, 0x6e, 0xec, 0x24, 0x7e, 0xde, 0x8b, 0xb7, 0xee, 0x95, 0x43, 0xdf, 0xc1,
	0xb9, 0xa5, 0xe6, 0xf8, 0xbd, 0x46, 0x6d, 0xc8, 0x53, 0x38, 0xfd, 0x82, 0xa8, 0x96, 0x8b, 0x21,
	0x3e, 0xa8, 0x8e, 0xb0, 0x14, 0x2b, 0xfc, 0xb1, 0x27, 0x58, 0x41, 0x5f, 0x40, 0xd0, 0xf5, 0xff,
	0x13, 0xa6, 0x37, 0x30, 0xb5, 0x95, 0xb8, 0x97, 0xe4, 0x11, 0xb8, 0x87, 0xbe, 0xbb, 0x5c, 0xd8,
	0x4c, 0x5d, 0xdc, 0x61, 0x6b, 0xc9, 0xe7, 0xf9, 0xa0, 0x08, 0x01, 0xff, 0xa3, 0xd4, 0x26, 0xf4,
	0xec, 0xa4, 0xad, 0xa9, 0x86, 0xd9, 0x82, 0xeb, 0x52, 0x36, 0xa8, 0xda, 0x7f, 0xc2, 0xf6, 0x21,
	0xf7, 0x18, 0x22, 0x31, 0x04, 0xdd, 0x6e, 0x86, 0x37, 0x5a, 0x9e, 0x97, 0x8f, 0x2d, 0xf2, 0x1c,
	0xce, 0xde, 0x37, 0x8c, 0x57, 0xac, 0xa8, 0x30, 0xf4, 0x63, 0x27, 0x99, 0xe6, 0x47, 0x63, 0xfe,
	0xcb, 0x01, 0xff, 0xb3, 0x5c, 0x21, 0x99, 0x03, 0x7c, 0x6d, 0x45, 0x39, 0xfc, 0xd2, 0xc5, 0x9f,
	0xdf, 0x12, 0xfd, 0xe5, 0xd0, 0x09, 0x79, 0x09, 0xd3, 0x5b, 0x34, 0x56, 0x92, 0xc7, 0xb6, 0x3f,
	0xde, 0x76, 0x14, 0xa4, 0xdd, 0x31, 0xf4, 0x1e, 0x9d, 0x90, 0x57, 0x10, 0xdc, 0xa2, 0x39, 0xac,
	0xaa, 0x07, 0x8e, 0x16, 0x1c, 0xcd, 0x0e, 0x4e, 0x37, 0x40, 0x27, 0xc5, 0xa9, 0xbd, 0xa0, 0x37,
	0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x4e, 0xb4, 0x7e, 0xcd, 0x9c, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NodeClient is the client API for Node service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NodeClient interface {
	SyncEvents(ctx context.Context, in *KnownEvents, opts ...grpc.CallOption) (*KnownEvents, error)
	GetEvent(ctx context.Context, in *EventRequest, opts ...grpc.CallOption) (*wire.Event, error)
	GetPeerInfo(ctx context.Context, in *PeerRequest, opts ...grpc.CallOption) (*PeerInfo, error)
}

type nodeClient struct {
	cc *grpc.ClientConn
}

func NewNodeClient(cc *grpc.ClientConn) NodeClient {
	return &nodeClient{cc}
}

func (c *nodeClient) SyncEvents(ctx context.Context, in *KnownEvents, opts ...grpc.CallOption) (*KnownEvents, error) {
	out := new(KnownEvents)
	err := c.cc.Invoke(ctx, "/api.Node/SyncEvents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) GetEvent(ctx context.Context, in *EventRequest, opts ...grpc.CallOption) (*wire.Event, error) {
	out := new(wire.Event)
	err := c.cc.Invoke(ctx, "/api.Node/GetEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) GetPeerInfo(ctx context.Context, in *PeerRequest, opts ...grpc.CallOption) (*PeerInfo, error) {
	out := new(PeerInfo)
	err := c.cc.Invoke(ctx, "/api.Node/GetPeerInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NodeServer is the server API for Node service.
type NodeServer interface {
	SyncEvents(context.Context, *KnownEvents) (*KnownEvents, error)
	GetEvent(context.Context, *EventRequest) (*wire.Event, error)
	GetPeerInfo(context.Context, *PeerRequest) (*PeerInfo, error)
}

// UnimplementedNodeServer can be embedded to have forward compatible implementations.
type UnimplementedNodeServer struct {
}

func (*UnimplementedNodeServer) SyncEvents(ctx context.Context, req *KnownEvents) (*KnownEvents, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SyncEvents not implemented")
}
func (*UnimplementedNodeServer) GetEvent(ctx context.Context, req *EventRequest) (*wire.Event, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEvent not implemented")
}
func (*UnimplementedNodeServer) GetPeerInfo(ctx context.Context, req *PeerRequest) (*PeerInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPeerInfo not implemented")
}

func RegisterNodeServer(s *grpc.Server, srv NodeServer) {
	s.RegisterService(&_Node_serviceDesc, srv)
}

func _Node_SyncEvents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KnownEvents)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).SyncEvents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Node/SyncEvents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).SyncEvents(ctx, req.(*KnownEvents))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_GetEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).GetEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Node/GetEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).GetEvent(ctx, req.(*EventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_GetPeerInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PeerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).GetPeerInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Node/GetPeerInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).GetPeerInfo(ctx, req.(*PeerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Node_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Node",
	HandlerType: (*NodeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SyncEvents",
			Handler:    _Node_SyncEvents_Handler,
		},
		{
			MethodName: "GetEvent",
			Handler:    _Node_GetEvent_Handler,
		},
		{
			MethodName: "GetPeerInfo",
			Handler:    _Node_GetPeerInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
